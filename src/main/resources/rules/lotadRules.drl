//created on: 8 mar 2021
package rules

//list any import classes here.
import it.unicam.lcp.lotad.*;

function int calculateBattleLife (int baseLife, int level){
    return ((2*baseLife * level)/100) + level + 10;
}

function int calculateBattleStat(int baseStat, int level){
    return Math.round(((2*baseStat * level)/100) + 10);
}

function int calculateDamage(int level, int power, int attack, int defense){
    return Math.round(((((((2*level)/5)+2)*power)*(attack/defense))/50)+2);
}

/*function int multiplier(int stage){
    float fStage = (float) stage;
    return Math.round((1.0 + fStage*(1.0/2.0)));
}*/

rule "SetBattleStats"
salience 90
when
    pkmn: Pokemon(!pkmn.isBattleStats())
then
    Utility.helper(drools);
    pkmn.setBattleLife(calculateBattleLife(pkmn.getBaseLife(), pkmn.getLevel()));

    pkmn.setBattleAttack(calculateBattleStat(pkmn.getBaseAttack(), pkmn.getLevel()));
    pkmn.setBattleDefense(calculateBattleStat(pkmn.getBaseDefense(), pkmn.getLevel()));

    pkmn.setBattleSpeed(calculateBattleStat(pkmn.getBaseSpeed(), pkmn.getLevel()));

    pkmn.setBattleSpecialAttack(calculateBattleStat(pkmn.getBaseSpecialAttack(), pkmn.getLevel()));
    pkmn.setBattleSpecialDefense(calculateBattleStat(pkmn.getBaseSpecialDefense(), pkmn.getLevel()));

    pkmn.setBattleStats(true);
    update(pkmn);

 end

rule "PhysicalMove"
when
    moveAction: MoveAction(moveAction.move.moveType == MoveType.PHYSICAL)
then
    Utility.helper(drools);
    System.out.println("Damage");
    System.out.println(calculateDamage(moveAction.getAttacker().getLevel(), moveAction.getMove().getPower(), moveAction.getAttacker().getBattleAttack(), moveAction.getDefender().getBattleDefense()));
    moveAction.getDefender().setBattleLife(moveAction.getDefender().getBattleLife() - calculateDamage(moveAction.getAttacker().getLevel(), moveAction.getMove().getPower(), moveAction.getAttacker().getBattleAttack(), moveAction.getDefender().getBattleDefense()));
    update(moveAction.getDefender())
end

rule "SpecialMove"
when
    moveAction: MoveAction(moveAction.move.moveType == MoveType.SPECIAL)
then
    Utility.helper(drools);
    System.out.println("Damage");
    System.out.println(calculateDamage(moveAction.getAttacker().getLevel(), moveAction.getMove().getPower(), moveAction.getAttacker().getBattleSpecialAttack(), moveAction.getDefender().getBattleSpecialDefense()));
    moveAction.getDefender().setBattleLife(moveAction.getDefender().getBattleLife() - calculateDamage(moveAction.getAttacker().getLevel(), moveAction.getMove().getPower(), moveAction.getAttacker().getBattleSpecialAttack(), moveAction.getDefender().getBattleSpecialDefense()));
    update(moveAction.getDefender())
end