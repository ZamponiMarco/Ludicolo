package rules

//list any import classes here.
import java.util.Comparator
import it.unicam.lcp.ludicolo.*
import it.unicam.lcp.ludicolo.Utility
import it.unicam.lcp.ludicolo.pkmn.Stat
import it.unicam.lcp.ludicolo.actions.moves.MoveAction
import it.unicam.lcp.ludicolo.actions.ActionStatus
import it.unicam.lcp.ludicolo.actions.items.ItemAction
import it.unicam.lcp.ludicolo.actions.Action

rule "ActionsPriority"
    salience 80
when
    playerOneMoveAction: Action(playerOneMoveAction.status == ActionStatus.DEFINED)
    playerTwoMoveAction: Action(playerTwoMoveAction.status == ActionStatus.DEFINED,
        playerTwoMoveAction.source != playerOneMoveAction.source)
then
    Utility.helper(drools);
        Action priorityAction = Comparator.<Action, Action>comparing(action -> action).
        thenComparingInt(move -> move.getSource().getCurrentPokemon().getBattleStatValue(Stat.SPEED)).
        compare(playerOneMoveAction, playerTwoMoveAction) > 0 ? playerOneMoveAction : playerTwoMoveAction;
    priorityAction.setStatus(ActionStatus.READYTOFIRE);
    update(priorityAction);
end

rule "SetupNextAction"
    salience 39
when
    firstAction : Action(firstAction.status == ActionStatus.DONE)
    secondAction : Action(secondAction.status == ActionStatus.DEFINED)
then
    Utility.helper(drools);
    secondAction.setStatus(ActionStatus.READYTOFIRE);
    update(secondAction);
 end

rule "EndAction"
    salience 38
when
    actionDone : Action(actionDone.status == ActionStatus.DONE)
then
    Utility.helper(drools);
    retract(actionDone);
 end