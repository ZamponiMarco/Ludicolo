package rules

import it.unicam.lcp.ludicolo.actions.SwapAction
import it.unicam.lcp.ludicolo.actions.ActionStatus
import it.unicam.lcp.ludicolo.Utility
import it.unicam.lcp.ludicolo.Player
import it.unicam.lcp.ludicolo.pkmn.Pokemon


rule "SwapActionFire"
    agenda-group "action fire"
    salience 11
when
    swapAction: SwapAction(swapAction.status == ActionStatus.READY_TO_FIRE)
    oldPokemon: Pokemon(oldPokemon.getOwner().equals(swapAction.getSource()))
    player: Player(player.equals(swapAction.getSource()))
then
    Utility.helper(drools);
    retract(oldPokemon);
    System.out.println(player.getName() + " retracted " + oldPokemon.getName());
    Pokemon newPokemon = swapAction.getSource().getPokemonTeamNotFainted().get(swapAction.getNewPokemonIndex());
    System.out.println(player.getName() + " sent into battle " + newPokemon.getName());
    insert(newPokemon);

    swapAction.setStatus(ActionStatus.DONE);

    update(swapAction)

    kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("pokemon setup").setFocus();
end